name: Ares-Device-Tree-Generator

on:
  workflow_dispatch:
    inputs:
      DEVICE_IMG:
        description: '(.img) file link'
        required: true
        default: 'https://github.com/abrohim0786/OrangeFox-Recovery-Builder-2025/releases/download/16670367505/boot.img'
      DEVICE_BRANCH:
        description: 'Your device branch name (Optional)'
        required: true
        default: 'android-12.1'
      GITHUB_TOKEN:
        description: 'Your GitHub access token (Required for pushing to repository, must have repo permissions)'
        required: true
        default: ''
      EMPTY_REPO:
        description: 'Your empty repo name on GitHub (e.g., device_xiaomi_ares - DO NOT include .git!)'
        required: true
        default: 'device_xiaomi_ares'
      COMMIT_MESSAGE:
        description: 'Your commit message (Optional)'
        required: true
        default: 'TWRP device tree Xiaomi Redmi K40 Gaming Poco F3GT'
      PUSH_GITHUB:
        description: 'Push to GitHub Repository.'
        type: boolean
        required: true
        default: false
      RELEASE_FILE:
        description: 'Upload file to GitHub Release too.'
        type: boolean
        required: true
        default: true

jobs:
  build:
    name: Device Tree Generator by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ github.event.inputs.GITHUB_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python and Install Tools
      run: |
        pip3 install --upgrade pip
        pip3 install twrpdtgen
        sudo apt-get update
        sudo apt-get install -y cpio zip

    - name: Downloading .img file
      run: |
        wget -O boot.img ${{ github.event.inputs.DEVICE_IMG }}
        ls -l
        if [ -f ./recovery.img ]; then
            echo "RECOVERY_TYPE=recovery" >> $GITHUB_ENV
            echo "recovery.img file found!"
        elif [ -f ./boot.img ]; then
            echo "RECOVERY_TYPE=boot" >> $GITHUB_ENV
            echo "boot.img file found!"
        elif [ -f ./vendor_boot.img ]; then
            echo "RECOVERY_TYPE=vendor_boot" >> $GITHUB_ENV
            echo "vendor_boot.img file found!"
        else
            echo "No Recovery file found!"
            exit 1
        fi

    - name: Generate Device Tree
      run: |
        python3 -m twrpdtgen ./${{ env.RECOVERY_TYPE }}.img
        ls -l output || echo "No output directory found"

    - name: Set Build Date
      run: |
        echo "BUILD_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: Get Device Information
      run: |
        if [ -d output ]; then
          mv ./output/ device
        fi
        ls -l device
        # Try two-level traversal, fallback to one-level
        if [ "$(find device -mindepth 2 -maxdepth 2 -type d | wc -l)" -gt 0 ]; then
          cd device/*/
          echo "DEVICE_ID=${PWD##*/}" >> $GITHUB_ENV
          cd */
          echo "DEVICE_IDD=${PWD##*/}" >> $GITHUB_ENV
        else
          cd device/
          echo "DEVICE_ID=${PWD##*/}" >> $GITHUB_ENV
          echo "DEVICE_IDD=${PWD##*/}" >> $GITHUB_ENV
        fi

    - name: Add to Zip
      run: |
        zip -r ${{ env.DEVICE_ID }}_${{ env.DEVICE_IDD }}_tree.zip ./device/

    - name: Release
      if: ${{ github.event.inputs.RELEASE_FILE }}
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.DEVICE_ID }}_${{ env.DEVICE_IDD }}_tree.zip
        name: ${{ env.DEVICE_ID }} ${{ env.DEVICE_IDD }} device tree // ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          Automated device tree release for ${{ env.DEVICE_ID }} ${{ env.DEVICE_IDD }} on ${{ env.BUILD_DATE }}

    - name: Push to GitHub
      if: ${{ github.event.inputs.PUSH_GITHUB }}
      run: |
        echo "Current directory:"
        pwd
        echo "Contents of device directory:"
        ls -l device
        # Try two-level traversal, fallback to one-level
        if [ "$(find device -mindepth 2 -maxdepth 2 -type d | wc -l)" -gt 0 ]; then
          cd device/*/*/
        else
          cd device/
        fi
        git init
        git config --global user.email "callofduty.pubg786@gmail.com"
        git config --global user.name "abrohim0786"
        git add .
        git commit -m "${{ github.event.inputs.COMMIT_MESSAGE }}"
        git branch -M ${{ github.event.inputs.DEVICE_BRANCH }}
        git remote add origin https://${{ github.actor }}:${{ github.event.inputs.GITHUB_TOKEN }}@github.com/${{ github.actor }}/${{ github.event.inputs.EMPTY_REPO }}.git
        git push -u origin ${{ github.event.inputs.DEVICE_BRANCH }}
